import '../my_services_screen/widgets/my_services_item_widget.dart';import 'controller/my_services_controller.dart';import 'models/my_services_item_model.dart';import 'package:flutter/material.dart';import 'package:khalid_s_application5/core/app_export.dart';import 'package:khalid_s_application5/widgets/app_bar/appbar_image.dart';import 'package:khalid_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:khalid_s_application5/widgets/custom_search_view.dart';class MyServicesScreen extends GetWidget<MyServicesController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.gray100, body: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: getHorizontalSize(720.00), padding: getPadding(top: 19, bottom: 19), decoration: AppDecoration.outlineBlack90029, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [CustomAppBar(height: getVerticalSize(56.00), leadingWidth: 68, leading: AppbarImage(height: getVerticalSize(35.00), width: getHorizontalSize(38.00), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 30, top: 2, bottom: 5), onTap: onTapArrowleft), centerTitle: true, title: Text("lbl_my_services".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRegular36), actions: [AppbarImage(height: getSize(38.00), width: getSize(38.00), svgPath: ImageConstant.imgClose, margin: getMargin(left: 30, top: 4, right: 30))]), CustomSearchView(width: 666, focusNode: FocusNode(), controller: controller.searchController, hintText: "msg_search_adventures".tr, margin: getMargin(top: 30, bottom: 6), prefix: Container(margin: getMargin(left: 17, top: 14, right: 12, bottom: 13), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(minWidth: getSize(30.00), minHeight: getSize(30.00)), suffix: Padding(padding: EdgeInsets.only(right: getHorizontalSize(15.00)), child: IconButton(onPressed: () {controller.searchController.clear;}, icon: Icon(Icons.clear, color: Colors.grey.shade600))), suffixConstraints: BoxConstraints(minWidth: getHorizontalSize(28.00), minHeight: getVerticalSize(28.00)))])), Container(width: getHorizontalSize(647.00), margin: getMargin(left: 32, top: 26, right: 41, bottom: 5), decoration: AppDecoration.fillGray100, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Obx(() => GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(283.00), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(21.00), crossAxisSpacing: getHorizontalSize(21.00)), physics: BouncingScrollPhysics(), itemCount: controller.myServicesModelObj.value.myServicesItemList.length, itemBuilder: (context, index) {MyServicesItemModel model = controller.myServicesModelObj.value.myServicesItemList[index]; return MyServicesItemWidget(model);}))]))]))); } 
onTapArrowleft() { Get.toNamed(AppRoutes.providerAccountScreen); } 
 }
